/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestimonialsRouteImport } from './routes/testimonials'
import { Route as TestApiRouteImport } from './routes/test-api'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LocationsRouteImport } from './routes/locations'
import { Route as DriverRouteImport } from './routes/driver'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactsRouteImport } from './routes/contacts'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as DriverDashboardRouteImport } from './routes/driver/dashboard'
import { Route as DashboardUserRouteImport } from './routes/dashboard/user'
import { Route as DashboardAdminRouteImport } from './routes/dashboard/admin'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminProductsRouteImport } from './routes/admin/products'
import { Route as AdminOrdersRouteImport } from './routes/admin/orders'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminSettingsProfileRouteImport } from './routes/admin/settings/profile'

const TestimonialsRoute = TestimonialsRouteImport.update({
  id: '/testimonials',
  path: '/testimonials',
  getParentRoute: () => rootRouteImport,
} as any)
const TestApiRoute = TestApiRouteImport.update({
  id: '/test-api',
  path: '/test-api',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationsRoute = LocationsRouteImport.update({
  id: '/locations',
  path: '/locations',
  getParentRoute: () => rootRouteImport,
} as any)
const DriverRoute = DriverRouteImport.update({
  id: '/driver',
  path: '/driver',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactsRoute = ContactsRouteImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const DriverDashboardRoute = DriverDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DriverRoute,
} as any)
const DashboardUserRoute = DashboardUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminRoute = DashboardAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)
const AdminProductsRoute = AdminProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AdminRoute,
} as any)
const AdminOrdersRoute = AdminOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AdminRoute,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsProfileRoute = AdminSettingsProfileRouteImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/contact': typeof ContactRoute
  '/contacts': typeof ContactsRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/driver': typeof DriverRouteWithChildren
  '/locations': typeof LocationsRoute
  '/login': typeof LoginRoute
  '/signin': typeof SigninRoute
  '/test-api': typeof TestApiRoute
  '/testimonials': typeof TestimonialsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/user': typeof DashboardUserRoute
  '/driver/dashboard': typeof DriverDashboardRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/products': typeof ProductsIndexRoute
  '/admin/settings/profile': typeof AdminSettingsProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/contacts': typeof ContactsRoute
  '/driver': typeof DriverRouteWithChildren
  '/locations': typeof LocationsRoute
  '/login': typeof LoginRoute
  '/signin': typeof SigninRoute
  '/test-api': typeof TestApiRoute
  '/testimonials': typeof TestimonialsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/user': typeof DashboardUserRoute
  '/driver/dashboard': typeof DriverDashboardRoute
  '/admin': typeof AdminIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/products': typeof ProductsIndexRoute
  '/admin/settings/profile': typeof AdminSettingsProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/contact': typeof ContactRoute
  '/contacts': typeof ContactsRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/driver': typeof DriverRouteWithChildren
  '/locations': typeof LocationsRoute
  '/login': typeof LoginRoute
  '/signin': typeof SigninRoute
  '/test-api': typeof TestApiRoute
  '/testimonials': typeof TestimonialsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/user': typeof DashboardUserRoute
  '/driver/dashboard': typeof DriverDashboardRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/admin/settings/profile': typeof AdminSettingsProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/admin'
    | '/contact'
    | '/contacts'
    | '/dashboard'
    | '/driver'
    | '/locations'
    | '/login'
    | '/signin'
    | '/test-api'
    | '/testimonials'
    | '/admin/dashboard'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/users'
    | '/dashboard/admin'
    | '/dashboard/user'
    | '/driver/dashboard'
    | '/admin/'
    | '/dashboard/'
    | '/products'
    | '/admin/settings/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/contacts'
    | '/driver'
    | '/locations'
    | '/login'
    | '/signin'
    | '/test-api'
    | '/testimonials'
    | '/admin/dashboard'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/users'
    | '/dashboard/admin'
    | '/dashboard/user'
    | '/driver/dashboard'
    | '/admin'
    | '/dashboard'
    | '/products'
    | '/admin/settings/profile'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/admin'
    | '/contact'
    | '/contacts'
    | '/dashboard'
    | '/driver'
    | '/locations'
    | '/login'
    | '/signin'
    | '/test-api'
    | '/testimonials'
    | '/admin/dashboard'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/users'
    | '/dashboard/admin'
    | '/dashboard/user'
    | '/driver/dashboard'
    | '/admin/'
    | '/dashboard/'
    | '/products/'
    | '/admin/settings/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AdminRoute: typeof AdminRouteWithChildren
  ContactRoute: typeof ContactRoute
  ContactsRoute: typeof ContactsRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  DriverRoute: typeof DriverRouteWithChildren
  LocationsRoute: typeof LocationsRoute
  LoginRoute: typeof LoginRoute
  SigninRoute: typeof SigninRoute
  TestApiRoute: typeof TestApiRoute
  TestimonialsRoute: typeof TestimonialsRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/testimonials': {
      id: '/testimonials'
      path: '/testimonials'
      fullPath: '/testimonials'
      preLoaderRoute: typeof TestimonialsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-api': {
      id: '/test-api'
      path: '/test-api'
      fullPath: '/test-api'
      preLoaderRoute: typeof TestApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/locations': {
      id: '/locations'
      path: '/locations'
      fullPath: '/locations'
      preLoaderRoute: typeof LocationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/driver': {
      id: '/driver'
      path: '/driver'
      fullPath: '/driver'
      preLoaderRoute: typeof DriverRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contacts': {
      id: '/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/driver/dashboard': {
      id: '/driver/dashboard'
      path: '/dashboard'
      fullPath: '/driver/dashboard'
      preLoaderRoute: typeof DriverDashboardRouteImport
      parentRoute: typeof DriverRoute
    }
    '/dashboard/user': {
      id: '/dashboard/user'
      path: '/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof DashboardUserRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/products': {
      id: '/admin/products'
      path: '/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/orders': {
      id: '/admin/orders'
      path: '/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/settings/profile': {
      id: '/admin/settings/profile'
      path: '/settings/profile'
      fullPath: '/admin/settings/profile'
      preLoaderRoute: typeof AdminSettingsProfileRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminOrdersRoute: typeof AdminOrdersRoute
  AdminProductsRoute: typeof AdminProductsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminSettingsProfileRoute: typeof AdminSettingsProfileRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminDashboardRoute: AdminDashboardRoute,
  AdminOrdersRoute: AdminOrdersRoute,
  AdminProductsRoute: AdminProductsRoute,
  AdminUsersRoute: AdminUsersRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminSettingsProfileRoute: AdminSettingsProfileRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRoute
  DashboardUserRoute: typeof DashboardUserRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRoute,
  DashboardUserRoute: DashboardUserRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface DriverRouteChildren {
  DriverDashboardRoute: typeof DriverDashboardRoute
}

const DriverRouteChildren: DriverRouteChildren = {
  DriverDashboardRoute: DriverDashboardRoute,
}

const DriverRouteWithChildren =
  DriverRoute._addFileChildren(DriverRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AdminRoute: AdminRouteWithChildren,
  ContactRoute: ContactRoute,
  ContactsRoute: ContactsRoute,
  DashboardRoute: DashboardRouteWithChildren,
  DriverRoute: DriverRouteWithChildren,
  LocationsRoute: LocationsRoute,
  LoginRoute: LoginRoute,
  SigninRoute: SigninRoute,
  TestApiRoute: TestApiRoute,
  TestimonialsRoute: TestimonialsRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
